#!/bin/bash

# Set your project ID and bucket name
PROJECT_ID="devfestprep1"
BUCKET_NAME="devfest2024prep"
SA_NAME="github-actions-${BUCKET_NAME}"
SA_DISPLAY_NAME="GitHub Actions for ${BUCKET_NAME}"
FUNCTION_NAME="hello-world"
REGION="us-central1"

# Set the project
gcloud config set project $PROJECT_ID

# Create a new bucket
gsutil mb -p $PROJECT_ID -c standard -l $REGION -b on gs://$BUCKET_NAME

# Enable website configuration on the bucket
gsutil web set -m index.html -e 404.html gs://$BUCKET_NAME

# Make the bucket publicly readable
gsutil iam ch allUsers:objectViewer gs://$BUCKET_NAME

# Upload index.html and 404.html files
gsutil cp index.html gs://$BUCKET_NAME
gsutil cp 404.html gs://$BUCKET_NAME

# Set the correct Content-Type for HTML files
gsutil setmeta -h "Content-Type:text/html" gs://$BUCKET_NAME/*.html

# Create a new service account
gcloud iam service-accounts create $SA_NAME \
    --display-name="$SA_DISPLAY_NAME"

# Get the full service account email
SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:$SA_DISPLAY_NAME" \
    --format='value(email)')

# Assign roles to the service account for this specific bucket
gsutil iam ch serviceAccount:$SA_EMAIL:objectAdmin gs://$BUCKET_NAME

# Assign roles for Cloud Functions
# Assign roles to the service account
gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/cloudfunctions.developer"

gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/iam.serviceAccountUser"

gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/cloudbuild.builds.editor"


# Enable necessary APIs
gcloud services enable cloudfunctions.googleapis.com
gcloud services enable cloudbuild.googleapis.com

# Create a directory for the function
mkdir -p my-function
cd my-function

# Create the function code
cat << EOF > index.js
exports.helloWorld = (req, res) => {
  res.status(200).send('Hello, World!');
};
EOF

# Create the package.json file
cat << EOF > package.json
{
  "name": "hello-world-function",
  "version": "1.0.0",
  "description": "A simple Hello World function",
  "main": "index.js",
  "engines": {
    "node": "18"
  }
}
EOF

# Deploy the Cloud Function
gcloud functions deploy hello-world \
  --runtime nodejs18 \
  --trigger-http \
  --allow-unauthenticated \
  --region us-central1 \
  --source . \
  --entry-point helloWorld

cd ..

# Create and download a JSON key file
gcloud iam service-accounts keys create ./key.json \
    --iam-account="$SA_EMAIL"

# Output the content of the key file
echo "Here's your service account key. Use this for your GitHub Actions secret:"
cat ./key.json

# Clean up: remove the key file from your local machine
rm ./key.json

# Display the website URL and function URL
echo "Your website is now available at: https://storage.googleapis.com/$BUCKET_NAME/index.html"
FUNCTION_URL=$(gcloud functions describe $FUNCTION_NAME --region=$REGION --format='value(httpsTrigger.url)')
echo "Your Cloud Function is available at: $FUNCTION_URL"

echo "Remember to add the service account key to your GitHub repository secrets as GCP_SA_KEY"
echo "Also add your project ID ($PROJECT_ID) as GCP_PROJECT_ID, bucket name ($BUCKET_NAME) as GCP_BUCKET_NAME,"
echo "function name ($FUNCTION_NAME) as GCP_FUNCTION_NAME, and region ($REGION) as GCP_REGION in your GitHub secrets"